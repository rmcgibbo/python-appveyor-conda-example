environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: 'cmd /E:ON /V:ON /C .\tools\appveyor\run_with_env.cmd'
    ANACONDA_TOKEN:
      secure: UMSXPRCnP38rwuIS4dAq/ukkO7MNo513Qn8XwLPrtGtbGA0QGEDx8aWUQMsLrlaK
    PYPKG: pycydemo
    GITHUB_REPO_NAME: tovrstra/python-cython-ci-example

  matrix:
    - PYTHON_VERSION: 2.7
      CONDA: C:\Miniconda

    - PYTHON_VERSION: 3.5
      CONDA: C:\Miniconda35

    - PYTHON_VERSION: 3.6
      CONDA: C:\Miniconda36

version: '{build}'
image: Visual Studio 2015

# For testing only...
#skip_non_tags: true

platform:
- x86
- x64

branches:
  only:
    - master

init:
  - ps: if ($Env:PLATFORM -eq "x64") { $Env:CONDA = "${Env:CONDA}-x64" }
  - ps: Write-Host $Env:PYTHON_VERSION
  - ps: Write-Host $Env:CONDA
  - ps: Write-Host $Env:GITHUB_REPO_NAME
  - ps: Write-Host $Env:PLATFORM
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG_NAME
  - ps: Write-Host $Env:APPVEYOR_REPO_NAME

install:
  # Load the conda root environment, configure and install some packages
  - '"%CONDA%\Scripts\activate.bat"'
  - conda config --set always_yes yes --set changeps1 no
  # Needed for compiler('c') function, temporary solution:
  # See https://github.com/conda/conda-build/issues/2263
  - conda config --add channels c3i_test
  - conda update -q conda
  - conda info -a
  # A few things must be installed for the build and deployment steps. Also dependencies
  # for setup.py must be pre-installed.
  - conda install python=%PYTHON_VERSION% conda-build anaconda-client numpy cython

build: false

test_script:
  # Build the package
  - git fetch origin --tags
  - conda build tools/conda.recipe"

  # Install the package
  - conda install --use-local %PYPKG%

  # Run the tests outside the source tree.
  - pushd %HOMEPATH% && (nosetests -v %PYPKG% & popd)

after_test:
  # Copy the conda build to the home dir, such that it can be registerd as an artifact
  - move %CONDA%\conda-bld .

artifacts:
  # Files to be uploaded
  - path: 'conda-bld\win-*\*.tar.bz2'

on_success:
  # This is virtually impossible with a normal dos batch script...
  # Upload to anaconda, with the correct label derived from the version tag.
  - ps:
      if (($Env:APPVEYOR_REPO_TAG -eq "true") -and
          ($Env:APPVEYOR_REPO_NAME -eq ${Env:GITHUB_REPO_NAME})) {
        $tar_glob = ".\conda-bld\win-*\${Env:PYPKG}-${Env:APPVEYOR_REPO_TAG_NAME}-*.tar.bz2";
        Write-Host $tar_glob;
        if ($Env:APPVEYOR_REPO_TAG_NAME -like "*a*") {
          Start-Process -FilePath anaconda -ArgumentList "-t $Env:ANACONDA_TOKEN upload
          $tar_glob --no-progress -l alpha" -Wait -Passthru
        } elseif ($Env:APPVEYOR_REPO_TAG_NAME -like "*b*") {
          Start-Process -FilePath anaconda -ArgumentList "-t $Env:ANACONDA_TOKEN upload
          $tar_glob --no-progress -l beta" -Wait -Passthru
        } else {
          Start-Process -FilePath anaconda -ArgumentList "-t $Env:ANACONDA_TOKEN upload
          $tar_glob --no-progress" -Wait -Passthru
        }
      }
